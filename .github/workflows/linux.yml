name: linux

on:
  schedule:
    - cron:  '0 1 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        lisp: [sbcl-bin/2.0.0]
        target: [x86-64, x86]
        suffix: ['']
        image: ['glibc2.19-sbcl2.0.0']
        include:
          - lisp: sbcl-bin/2.0.0
            target: arm64
            image: 'glibc2.19-sbcl2.0.0'
            docker_platform: 'linux/arm64'
            docker_image_suffix: aarch64
            suffix: ['']
          - lisp: sbcl-bin/2.0.0
            target: x86-64
            image: 'glibc2.31-sbcl2.1.4'
            suffix: -glibc2.31
          - lisp: sbcl-bin/2.0.0
            target: x86
            image: 'glibc2.31-sbcl2.1.4'
            suffix: -glibc2.31
          - lisp: sbcl-bin/2.0.0
            target: x86-64
            image: 'musl1.2.2-sbcl2.0.5'
            suffix: -musl
          - lisp: sbcl-bin/2.0.0
            target: x86
            image: 'i386-musl1.2.2-sbcl2.0.5'
            suffix: -musl
          - lisp: sbcl-bin/2.0.0
            target: x86
            image: 'i386-musl1.1.24-sbcl2.0.5'
            suffix: -musl1.1
          - lisp: sbcl-bin/2.0.0
            target: x86-64
            image: 'glibc2.10-sbcl2.0.5-gcc5.5'
            suffix: -glibc2.10
            linkflags: -lrt
          - lisp: sbcl-bin/2.0.0
            target: x86
            image: 'glibc2.10-sbcl2.0.5'
            suffix: -glibc2.10
            linkflags: -lrt

    environment: SET_VERSION

    steps:
      - uses: actions/checkout@v2

      - name: setenv
        run: |
          echo "$HOME/.roswell/bin" >> $GITHUB_PATH
          echo "ROSWELL_BRANCH=release" >> $GITHUB_ENV
      - name: checkenv
        run: |
          uname -s
          uname -m
          echo $ROSWELL_INSTALL_DIR
          echo $ROSWELL_BRANCH
      - name: Install Roswell
        env:
          LISP: ${{ matrix.lisp }}
          GITHUB_OAUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IMAGE: ${{ matrix.image }}
          DOCKER_PLATFORM: ${{ matrix.docker_platform }}
          DOCKER_IMAGE_SUFFIX: ${{ matrix.docker_image_suffix }}
        run: |
          curl -L https://raw.githubusercontent.com/roswell/roswell/master/scripts/install-for-ci.sh | sh
          ros install snmsts/sn.github
          if [ -n "$IMAGE" ]; then
             docker login docker.pkg.github.com -u snmsts -p $GITHUB_OAUTH_TOKEN;
             make pull-docker || make build-docker push-docker
          fi
      - name: build
        env:
          VERSION: ${{ secrets.VERSION }}
          ARCH: ${{ matrix.target }}
          IMAGE: ${{ matrix.image }}
          SUFFIX: ${{ matrix.suffix }}
          LINKFLAGS: ${{ matrix.linkflags }}
          DOCKER_PLATFORM: ${{ matrix.docker_platform }}
          DOCKER_IMAGE_SUFFIX: ${{ matrix.docker_image_suffix }}
        run: |
          if [ "$VERSION" = "" ]; then
            make latest-version docker;
          else
            make docker;
          fi
      - name: upload
        env:
          GITHUB_OAUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ secrets.VERSION }}
          ARCH: ${{ matrix.target }}
          SUFFIX: ${{ matrix.suffix }}
        run: |
          if [ "$VERSION" = "" ]; then
            make latest-version upload-archive;
          else
            make upload-archive;
          fi
