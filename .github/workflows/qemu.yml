name: qemu

on:
  #schedule:
  #  - cron:  '0 1 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ secrets.VERSION }}
      ARCH: ${{ matrix.target }}
      SUFFIX: ${{ matrix.suffix }}
      LINKFLAGS: ${{ matrix.linkflags }}
      ROSWELL_BRANCH: master
      GITHUB_OAUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - target: ppc64le
            suffix: '-glibc2.40'
            lisp: sbcl-bin/2.4.0
            image: 'ppc64le/debian:trixie'
            os: linux
            docker-platform: linux/ppc64le
          - target: ppc64le
            suffix: '-glibc2.39'
            lisp: sbcl-bin/2.4.0
            image: 'ppc64le/ubuntu:24.04'
            os: linux
            docker-platform: linux/ppc64le
          - target: ppc64le
            suffix: '-glibc2.31'
            lisp: sbcl-bin/2.4.0
            image: 'ppc64le/ubuntu:20.04'
            os: linux
            docker-platform: linux/ppc64le
          - target: ppc64le
            suffix: '-glibc2.19'
            lisp: sbcl-bin/2.4.0
            image: 'ppc64le/ubuntu:14.04'
            os: linux
            docker-platform: linux/ppc64le
  
    environment: SET_VERSION

    steps:
      - uses: actions/checkout@v4
      - name: setenv
        run: |
          echo "$HOME/.roswell/bin" >> $GITHUB_PATH
          echo "ROSWELL_BRANCH=release" >> $GITHUB_ENV
      - name: checkenv
        run: |
          uname -s
          uname -m
          echo $ROSWELL_INSTALL_DIR
          echo $ROSWELL_BRANCH
      - name: Install Roswell
        env:
          LISP: ${{ matrix.lisp }}
        run: |
          curl -L https://raw.githubusercontent.com/roswell/roswell/master/scripts/install-for-ci.sh | sh
          ros install snmsts/sn.github
          make latest-version zstd sbcl
          echo 2.3.11 > version
          touch branch
      - name: config on qemu
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: none
          distro: none
          base_image: ${{ matrix.image }}
          install: |
            apt-get -qq update | true
            apt-get -qq install git build-essential curl
            #curl -L -O https://github.com/roswell/sbcl_bin/releases/download/2.3.11/sbcl-2.3.11-ppc64le-linux-glibc2.39-binary.tar.bz2
            #tar xf sbcl-2.3.11-ppc64le-linux-glibc2.39-binary.tar.bz2
            #rm sbcl-*.bz2;cd sbcl-*;sh install.sh
          run: |
            #LISP_IMPL='sbcl --dynamic-space-size 700MB --lose-on-corruption --disable-ldb --disable-debugger' \
            SBCL_OPTIONS='' \
            make latest-version compile-config
      - name: make-host-1
        run: |
          sudo bash -c "cd sbcl;sh make-host-1.sh"
      - name: build runtime on qemu
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: none
          distro: none
          base_image: ${{ matrix.image }}
          install: |
            apt-get -qq update | true
            apt-get -qq install git build-essential curl
            #curl -L -O https://github.com/roswell/sbcl_bin/releases/download/2.3.11/sbcl-2.3.11-ppc64le-linux-glibc2.39-binary.tar.bz2
            #tar xf sbcl-2.3.11-ppc64le-linux-glibc2.39-binary.tar.bz2
            #rm sbcl-*.bz2;cd sbcl-*;sh install.sh
          run: |
            cd sbcl;sh make-target-1.sh
      - name: make-host2
        run: |
          sudo bash -c "cd sbcl;sh make-host-2.sh"
      - name: build core and contrib on qemu
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: none
          distro: none
          base_image: ${{ matrix.image }}
          install: |
            apt-get -qq update | true
            apt-get -qq install git build-essential curl
            #curl -L -O https://github.com/roswell/sbcl_bin/releases/download/2.3.11/sbcl-2.3.11-ppc64le-linux-glibc2.39-binary.tar.bz2
            #tar xf sbcl-2.3.11-ppc64le-linux-glibc2.39-binary.tar.bz2
            #rm sbcl-*.bz2;cd sbcl-*;sh install.sh
          run: |
            cd sbcl;sh make-target-2.sh && sh make-target-contrib.sh
      - name: upload-image
        env:
          GITHUB_OAUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ secrets.VERSION }}
          ARCH: ${{ matrix.target }}
          IMAGE: ${{ matrix.image }}
          SUFFIX: ${{ matrix.suffix }}
          LINKFLAGS: ${{ matrix.linkflags }}
        run: |
          OS=${{ matrix.os }} make latest-version archive
          ls
          env FILE=`ls *.bz2` make latest-version upload-archive
