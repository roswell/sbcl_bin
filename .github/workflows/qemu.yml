name: qemu

on:
  #schedule:
  #  - cron:  '0 1 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ secrets.VERSION }}
      ARCH: ${{ matrix.target }}
      SUFFIX: ${{ matrix.suffix == 'yes' && format('-{0}', matrix.release) || ''}}
      LINKFLAGS: ${{ matrix.linkflags }}
      ROSWELL_BRANCH: master
      GITHUB_OAUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      fail-fast: false
      matrix:
        target: [ppc64le]
        release: ['ppc64le/debian:trixie']
        suffix: [yes]
        lisp: [sbcl-bin/2.4.0]
        os: [openbsd]
        include:
          - target: ppc64le
            release: 'ppc64le/debian:trixie'
            suffix: no
            lisp: sbcl-bin/2.4.0
            os: openbsd
  
    environment: SET_VERSION

    steps:
      - uses: actions/checkout@v4
      - name: setenv
        run: |
          echo "$HOME/.roswell/bin" >> $GITHUB_PATH
          echo "ROSWELL_BRANCH=release" >> $GITHUB_ENV
      - name: checkenv
        run: |
          uname -s
          uname -m
          echo $ROSWELL_INSTALL_DIR
          echo $ROSWELL_BRANCH
      - name: Install Roswell
        env:
          LISP: ${{ matrix.lisp }}
        run: |
          curl -L https://raw.githubusercontent.com/roswell/roswell/master/scripts/install-for-ci.sh | sh
          ros install snmsts/sn.github
          make latest-version zstd sbcl
      - name: compile on qemu
        uses: uraimo/run-on-arch-action@v2
        with:
          arch: none
          distro: none
          base_image: ${{ matrix.release }}
          install: |
            apt-get -qq update | true
            apt-get -qq install sbcl git build-essential
            bash -c 'cd zstd/lib; make PREFIX=/usr CFLAGS="-fPIC" install-includes install-static clean'
          run: |
            sudo touch /usr/bin/ros
            sudo chmod 755 /usr/bin/ros
            SBCL_OPTIONS='--with-sb-core-compression' \
            LISP_IMPL='sbcl --dynamic-space-size 700MB --lose-on-corruption --disable-ldb --disable-debugger' \
            make latest-version compile
      - name: upload
        env:
          GITHUB_OAUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION: ${{ secrets.VERSION }}
          ARCH: ${{ matrix.target }}
          IMAGE: ${{ matrix.image }}
          SUFFIX: ${{ matrix.suffix == 'yes' && format('-{0}', matrix.release) || ''}}
          LINKFLAGS: ${{ matrix.linkflags }}
          DOCKER_PLATFORM: ${{ matrix.docker-platform }}
          DOCKER_IMAGE_SUFFIX: ${{ matrix.docker-image-suffix }}
        run: |
          OS=${{ matrix.os }} make latest-version archive
          ls
          env FILE=`ls *.bz2` make latest-version upload-archive
